name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - name: Prepare ‚≠êÔ∏è
      # install gtest
      working-directory: /tmp
      run: |
        cd /tmp && git clone --depth 1 --branch release-1.6.0 https://github.com/google/googletest.git
        cd googletest && mkdir build && cd build && cmake .. && make
        cd .. && sudo cp -a include/gtest /usr/include && sudo cp -a build/*.a /usr/lib
        cd .. && rm -rf googletest*

    - name: Checkout üõéÔ∏è
      # get repo
      uses: actions/checkout@v2

    - name: Configure CMake üõ†
      # configure CMake project
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=ON

    - name: Build üë∑
      # build target
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install üí•
      # install target
      run: sudo cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Module Tests ‚úÖ
      # run module tests
      working-directory: ${{github.workspace}}/build
      run: cmake --build ${{github.workspace}}/build --target test

    - name: Integration Test ‚úÖ
      # build app to check integration
      working-directory: ${{github.workspace}}/test/application
      run: |
        cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build ./build --config ${{env.BUILD_TYPE}}
        cd build/src && chmod +x app && ./app
